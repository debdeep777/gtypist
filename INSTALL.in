		GNU Typist @VERSION Installation instructions

This program can be compiled under Unix and under Windows/DOS.

Compilation under Unix 
----------------------

In order to compile this program, you must have:
- The 'ncurses' or the 'curses' library

* Uncompress the sources distribution:
	tar xvfz gtypist-@VERSION.tar.gz

* Change to the sources directory
	cd gtypist-@VERSION

* Configure the package. By default the program will be installed at
/usr/local/bin and the lessons and international support in
/usr/local/share/gtypist (you can change with the option --prefix). By 
default it will install Native Language Support (you can disable this
with the option --disable-nls)
	./configure 

* Compile
	make

* Become root and install
	su
	umask 022
	make install

* To test your installation type
	gtypist
  or
	/usr/local/bin/gtypist


Compilation under Windows/DOS
-----------------------------

You must have:

- DJGPP compiler. Available at
    http://www.delorie.com/djgpp/zip-picker.html
  You only will need the C compiler.

- Emulation of the curses library pdcurses v2.4. Available at
    ftp://ftp.simtel.net/pub/simtelnet/gnu/djgpp/v2tk/pdcur24b.zip

* Decompress the sources distribution 
* Open a DOS session, change to the sources directory
	cd gtypist-@VERSION

* Configure the package
	configur

* Compile
	make

* To install it, you should create a directory (e.g. c:\GTypist) and
  copy into it the lessons of directory 'lessons' \ and the program
  gtypist.exe:

	mkdir c:\GTypist
	copy gtypist.exe c:\GTypist
	copy lessons\*.typ c:\GTypist

* To use it go to the directory where you installed it and run gtypist.exe
	cd GTypist
	gtypist


** Read on if you want to package the DOS-version.

* You might want to remove symbols from gtypist.exe:
	
	strip --strip-all gtypist.exe

* Include cwsdpmi.exe and cwsdpmi.doc (the DOS extender, see
  http://www.delorie.com for details), to support plain DOS

* You need to convert the lessons with a 8bit-characters with a program
  like "recode" (on GNU/Linux):

	for i in *.typ
	do
		recode latin1..ibmpc $i
	done
  (it doesn't hurt to convert all lessons)	
  With old versions of recode (i.e. 3.4.1), you have to use "latin1:ibmpc".

* To generate the HTML manuals, run "autogen.sh" (if not already done).
  To support DOS, rename "doc/gtypist.html" to "gtypist.htm"
  and other "doc/gtypist.<lg>.html" manuals to "gtyp_<ll>.htm"
  (where <ll> is a 2 character language code). 
  Then, create plain text documentation from these files either with
  Mozilla or "lynx -dump gtypist.htm > gtypist.txt", and convert it to DOS
  line-endings with recode, for example (see above)

* Copy all the files in one "gtypist" directory and then run
    zip -9 -r gtyp@VERSION.zip gtypist
  (remove the points in gtyp@VERSION and truncate it to 8 chars to support
  plain DOS)
  I've had trouble with infozip: zip 2.0.1 did not work,
  but 2.3 (or above) seems to work.
	

Problems and their solution
---------------------------

Configuration with Native Language Support under Unix:

	* If you configured first without NLS and now you want NLS, go
	  to directory intl remove libintl.h and configure again.
	* If your Unix doesn't have Native Language Support, the sources
	  of gtypist come with a limited version, to use it configure with:
		./configure --with-included-gettext
	  And before running gtypist set the environment variable LC_ALL/LANG
	  to your language and country codes (LL_CC, as described in the
	  manual, node "Environment Variables"). See the manual for the
          list of supported languages. Using this option it was possible
          to compile and run gtypist under AIX.

Dvorak Keyboard under GNU/Linux (Ben Armstrong <synrg@sanctuary.nslug.ns.ca>)

	To get Dvorak keymaps, run the 'loadkeys' command on the appropriate keymap
        file. For example if your keymaps are at /usr/share/keymaps

	loadkeys /usr/share/keymaps/i386/dvorak/dvorak.kmap.gz

        To switch to your default keyboard mappings, run loadkeys on
        the default keymap file:

	loadkeys /etc/console-tools/default.map.gz

        If you are in X, please visit the Dvorak home page at
        http://www.mwbrooks.com/dvorak/ for more information.

Keyboard under DOS/Windows:

	* You could experience some problems with the keyboard under
          DOS/Windows, instead of the [Return] key you should use
          [Control]+[J]. And instead of the F1, F2 .. F11, F12 keys
          use the keys 1,2 .. 10, A, S respectively.

Compilation under DOS without Long File Name support or in Windows NT

	* It is possible. You only need to rename the library
    	  libpdcurses.a in the lib directory of the DJGPP distribution
  	  to something with less than 8 characters for example
	  libpdc.a. Then modify the makefile of gtypist (don't use
	  edit since it doesn't preserve TABs) and change pdcurses
          with pdc. Finally compile and use it!

